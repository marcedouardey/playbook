image: centos:7

#~/.netrc file
#machine [gitlab-host]
#login [gitlab-user]
#password [password]
#~/.netrc file

#editing /etc/crontab and adding:
#root test -f /srv/www/otter/otter.restart && /bin/systemctl restart otter.service && rm -f /srv/www/otter/otter.restart

stages:
    - test
    - deploy

before_script:
    - yum install which -y
    # install ssh-agent if not already installed, it is required by docker
    - 'which ssh-agent || ( yum install openssh-clients -y )'
    # run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    # add the ssh key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    # for docker builds disable host key checking although this can lead to
    # mitm attacks; only use this in docker or it will overwrite the host
    # ssh config!
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

test:
    stage: test
    #script:
        #- yum update -y
        #- yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y
        #- yum install mariadb-devel mariadb-server python-virtualenv python-pip gcc gcc-c++ freetype-devel libpng-devel python-requests MySQL-python mailx python-simplejson vim httpd mod_wsgi -y
        #- sh setup.sh

production:
    stage: deploy

#on précise que chaque version du site doit être stockée en tant qu’artefacts
artifacts:
    paths:
      - /builds/dev/webapp/

    script:
#Synchronise les dossiers GitLab avec le serveur Web: on prend tous les dossiers statiques et on les synchronise sur le serveur:
        - rsync -avuz -e 'ssh -i ~ / .ssh / id_rsa' / builds / dev / webapp / * $APACHEserver
        - ssh -t dev@10.0.0.47 "cd dev && git pull && touch /srv/www/dev/dev.restart"
    only:
        - master
    environment: production
      name: production
      url: 'http://10.0.0.47'
